{
  // Kuzzle REST listening port
  "port": 7511,

  /*
   Host and port for the internal ipcBroker server
   This server handles internal communications between Kuzzle components
   */
  "ipcBroker": {
    "host": "localhost",
    "port": 7911
  },

  // Host and port for mqBroker service that handle communication with protocol like MQTT, STOMP and AMQP
  // Only make sense if environment variable MQ_BROKER_ENABLED is set to 1
  "mqBroker": {
    "host" : "rabbit",
    "port": 5672
  },
  /*
   Host and port for the internalEngine service: the light database service
   called by Kuzzle core components. Can be an array
   */
  "internalEngine": {
    "host": "elasticsearch",
    "port": "9200"
  },
  // Host and port for the readEngine service: the database called when we read a data. Can be an array.
  "readEngine": {
    "host": "elasticsearch",
    "port": "9200"
  },
  // Host and port for the writeEngine service: the database called when we write a data. Can be an array.
  "writeEngine": {
    "host": "elasticsearch",
    "port": "9200"
  },
  // Kuzzle internal cache configuration
  "cache": {
    "node": {
      "host": "redis",
      "port": 6379
    }
  },
  // JWT defaults.
  "jsonWebToken": {
    "algorithm": "HS256",
    "secret": "Kuzzle Rocks",
    "expiresIn": "1h"
  },
  // Password Manager defaults.
  "passwordManager": {
    "secret": "jbsB8r69PFP39KdLtjVr25Z22",
    "algorithm": "sha1",
    "digest": "hex"
  },

  // Default internal index
  "internalIndex": "%kuzzle",

  // repositories defaults
  "repositories": {
    "cacheTTL": 1440
  },

  // Default user profiles
  "userProfiles": {
    "admin": {
      "roles": [ "admin" ]
    },
    "default": {
      "roles": [ "default" ]
    },
    "anonymous": {
      "roles": [ "anonymous" ]
    }
  },
  // role template for all users before creating the first admin
  "roleWithoutAdmin": {
    "indexes": {                // when we are in the ES level, before the indexes
      "_canCreate": true,       // we can create indexes
      "*": {                    // when we are in any index (except %kuzzle index)
        "_canDelete": true,     // we can delete it
        "collections": {        // when we are in an index
          "_canCreate": true,   // we can create a collection in it
          "*": {                // in nay collection
            "_canDelete": true, // we can delete the collection
            "controllers": {    // at the controller level
              "*": {            // for any controller
                "actions": {    // and at the action level
                  "*": true     // we can do any action
                }
              }
            }
          }
        }
      },
      "%kuzzle": {                // into the %kuzzle index, only
        "_canDelete": false,      // we cannot delete collections
        "collections": {          // at the collection level, cannot create any collection by our own
          "_canCreate": true,     // we can create collections
          "*": {                  // for all the collections
            "_canDelete": false,  // we cannot delete it
            "controllers": {      // at the controller level
              "*": {              // with all the controller only
                "actions": {      // at the action level of the security controller
                  "*": true       // we can do any action
                  }
                }
              }
            }
          }
      }
    }
  },
  // Default security roles
  "userRoles": {
    "admin": {
      "indexes": {
        "_canCreate": true,
        "*": {
        "_canDelete": true,
        "collections": {
          "_canCreate": true,
          "*": {
            "_canDelete": true,
            "controllers": {
              "*": {
                "actions": {
                  "*": true
                  }
                }
              }
            }
          }
        },
        "%kuzzle": {
          "_canDelete": false,
          "collections": {
            "_canCreate": true,
            "*": {
              "_canDelete": false,
              "controllers": {
                "*": {
                  "actions": {
                    "*": true
                    }
                  }
                }
              }
            }
        }
      }
    },
    "anonymous": {
      "indexes": {
        "_canCreate": false,
        "*": {
          "_canDelete": false,
          "collections": {
            "_canCreate": false,
            "*": {
              "_canDelete": false,
              "controllers": {
                "auth": {
                  "actions": {
                    "login": true,
                    "checkToken": true,
                    "getCurrentUser": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "default": {
      "indexes": {
        "_canCreate": false,
        "*": {
          "_canDelete": false,
          "collections": {
            "_canCreate": false,
            "*": {
              "_canDelete": false,
              "controllers": {
                "auth": {
                  "actions": {
                    "logout": true,
                    "checkToken": true,
                    "getCurrentUser": true
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "pluginsManager": {
    /*
     The maximum number of milliseconds a Pipe Plugin should take on a single request
     before a warning is issued
     */
    "pipeWarnTime": 40,

    /*
     The maximum number of milliseconds a Pipe Plugin should take on a single request.
     If this timeout is reached, the request is rejected with a plugin timeout error.
     */
    "pipeTimeout": 250,

    /*
     Name of the database collection where the plugins configuration are stored
     */
    "dataCollection": "plugins",

    /*
     List of plugins installed when Kuzzle starts for the first time
     */
    "defaultPlugins": {
      "kuzzle-plugin-logger": {
        "npmVersion": "2.0.2",
        "activated": true
      },
      "kuzzle-plugin-socketio": {
        "npmVersion": "1.0.8",
        "activated": true
      },
      "kuzzle-plugin-auth-passport-local": {
        "npmVersion": "1.3.5",
        "activated": true
      }
    }
  },
  "request": {
    /*
     Maximum number of client requests that can be simultaneously processed by Kuzzle.
     Any submitted request beyond that threshold will be queued and executed once the
     maximum number of concurrent request becomes lower than that limit.
     */
    "maxConcurrentRequests": 50,

    /*
     Maximum number of requests that can be queued while waiting for the number of
     concurrent requests to diminish.
     As these requests are queued in memory, careful monitoring should be performed
     before raising this limit, and tuning the NodsJS maximum memory limit may
     be necessary.

     Requests submitted while the queue is full are discarded with a 503 error
     code ("Service temporary unavailable")
     */
    "maxRetainedRequests": 2000
  }
}